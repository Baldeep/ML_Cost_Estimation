[01.12.2016 15:38:30,395] [main] INFO  FileObject  - Reading File kemerer.arff
[01.12.2016 15:38:30,470] [main] INFO  CostEstimationFitness  - Inputs size: 6; variables: 6; dataLen: 15; outputs size: 15
[01.12.2016 15:38:30,510] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.12.2016 15:38:30,512] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 123.0 MB
[01.12.2016 15:38:30,523] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.12.2016 15:38:30,571] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population: 123.0 MB
[01.12.2016 15:38:30,572] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 120.7 MB
[01.12.2016 15:38:30,691] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1378.58
[01.12.2016 15:38:30,692] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (Language_numeric + KSLOC_numeric) / (RAWFP_numeric / AdjFP_numeric)
[01.12.2016 15:38:30,692] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 15:38:30,727] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1377.53
[01.12.2016 15:38:30,727] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (Language_numeric + KSLOC_numeric) / ((Language_numeric + RAWFP_numeric) / AdjFP_numeric)
[01.12.2016 15:38:30,728] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 3
[01.12.2016 15:38:31,106] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 105.9 MB
[01.12.2016 15:38:31,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1355.28
[01.12.2016 15:38:31,130] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((Duration_numeric + KSLOC_numeric) + Duration_numeric) - ((KSLOC_numeric + Duration_numeric) / (RAWFP_numeric / (KSLOC_numeric - Duration_numeric)))
[01.12.2016 15:38:31,132] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 4
[01.12.2016 15:38:31,192] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1327.92
[01.12.2016 15:38:31,192] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((Duration_numeric + ((KSLOC_numeric + Duration_numeric) + Duration_numeric)) + Duration_numeric) - ((KSLOC_numeric + Duration_numeric) / (RAWFP_numeric / (KSLOC_numeric - Duration_numeric)))
[01.12.2016 15:38:31,192] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
[01.12.2016 15:38:31,193] [main] INFO  CostEstimationMain  - Evaulation of dataset: kemerer.arff
[01.12.2016 15:38:31,193] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1327.92
[01.12.2016 15:38:31,193] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((Duration_numeric + ((KSLOC_numeric + Duration_numeric) + Duration_numeric)) + Duration_numeric) - ((KSLOC_numeric + Duration_numeric) / (RAWFP_numeric / (KSLOC_numeric - Duration_numeric)))
[01.12.2016 15:38:31,193] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
[01.12.2016 15:38:45,425] [main] INFO  FileObject  - Reading File kemerer.arff
[01.12.2016 15:38:45,441] [main] INFO  CostEstimationFitness  - Inputs size: 6; variables: 6; dataLen: 15; outputs size: 15
[01.12.2016 15:38:45,466] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.12.2016 15:38:45,469] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 123.0 MB
[01.12.2016 15:38:45,480] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.12.2016 15:38:45,530] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population: 123.0 MB
[01.12.2016 15:38:45,534] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 120.7 MB
[01.12.2016 15:38:45,667] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1353.37
[01.12.2016 15:38:45,668] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (RAWFP_numeric - 5.0) / (Language_numeric * 5.0)
[01.12.2016 15:38:45,668] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 15:38:45,791] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1347.37
[01.12.2016 15:38:45,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((RAWFP_numeric - 5.0) / (Language_numeric * 5.0)) + Language_numeric
[01.12.2016 15:38:45,793] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 3
[01.12.2016 15:38:45,813] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1342.77
[01.12.2016 15:38:45,814] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((RAWFP_numeric - 5.0) / (Language_numeric * 5.0)) + 5.0
[01.12.2016 15:38:45,814] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 3
[01.12.2016 15:38:45,835] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1304.72
[01.12.2016 15:38:45,837] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (RAWFP_numeric - (((RAWFP_numeric / 5.0) - KSLOC_numeric) + (Language_numeric / KSLOC_numeric))) / (Language_numeric * 5.0)
[01.12.2016 15:38:45,837] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
[01.12.2016 15:38:45,966] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1304.72
[01.12.2016 15:38:45,966] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (RAWFP_numeric - (((RAWFP_numeric / 5.0) - KSLOC_numeric) + (Language_numeric / (Duration_numeric + KSLOC_numeric)))) / (Language_numeric * 5.0)
[01.12.2016 15:38:45,966] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
[01.12.2016 15:38:45,978] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1304.70
[01.12.2016 15:38:45,978] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (RAWFP_numeric - (((RAWFP_numeric / 5.0) - KSLOC_numeric) + (Language_numeric / RAWFP_numeric))) / (Language_numeric * 5.0)
[01.12.2016 15:38:45,979] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
[01.12.2016 15:38:46,125] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1290.04
[01.12.2016 15:38:46,125] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((Duration_numeric + KSLOC_numeric) - ((KSLOC_numeric / AdjFP_numeric) * KSLOC_numeric)) + Duration_numeric) + Duration_numeric
[01.12.2016 15:38:46,129] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
[01.12.2016 15:38:46,156] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1278.21
[01.12.2016 15:38:46,157] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: Duration_numeric + ((Duration_numeric / Language_numeric) + ((KSLOC_numeric + Duration_numeric) - ((KSLOC_numeric / AdjFP_numeric) * KSLOC_numeric)))
[01.12.2016 15:38:46,157] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
[01.12.2016 15:38:46,157] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 100.7 MB
[01.12.2016 15:38:46,227] [main] INFO  CostEstimationMain  - Evaulation of dataset: kemerer.arff
[01.12.2016 15:38:46,228] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 1278.21
[01.12.2016 15:38:46,229] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: Duration_numeric + ((Duration_numeric / Language_numeric) + ((KSLOC_numeric + Duration_numeric) - ((KSLOC_numeric / AdjFP_numeric) * KSLOC_numeric)))
[01.12.2016 15:38:46,230] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 5
