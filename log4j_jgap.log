[01.12.2016 22:24:31,066] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.12.2016 22:24:31,111] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population: 123.0 MB
[01.12.2016 22:24:31,112] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 120.5 MB
[01.12.2016 22:24:31,313] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 286.0
[01.12.2016 22:24:31,314] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (AFP - PDR_AFP) * (Dev.Type + NPDR_AFP)
[01.12.2016 22:24:31,314] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 22:24:31,373] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 320.0
[01.12.2016 22:24:31,373] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (PDR_UFP * AFP) - (File - PDR_AFP)
[01.12.2016 22:24:31,374] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 22:24:31,470] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 498.0
[01.12.2016 22:24:31,470] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: PDR_AFP * AFP
[01.12.2016 22:24:31,471] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 1
[01.12.2016 22:24:32,474] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 107.2 MB
[01.12.2016 22:24:32,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 499.0
[01.12.2016 22:24:32,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (5.0 / Duration) + (PDR_AFP * AFP)
[01.12.2016 22:24:32,610] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 22:24:32,703] [main] INFO  CostEstimationMain  - Using Pred(n) Fitness Function
[01.12.2016 22:24:32,704] [main] INFO  CostEstimationMain  - Evaulation of dataset: china.arff
[01.12.2016 22:24:32,704] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 499.0
[01.12.2016 22:24:32,704] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (5.0 / Duration) + (PDR_AFP * AFP)
[01.12.2016 22:24:32,704] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 22:24:38,164] [main] INFO  FileObject  - Reading File china.arff
[01.12.2016 22:24:38,257] [main] INFO  CostEstimationPREDNFitness  - Inputs size: 17; variables: 17; dataLen: 499; outputs size: 499
[01.12.2016 22:24:38,287] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.12.2016 22:24:38,290] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 123.0 MB
[01.12.2016 22:24:38,305] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.12.2016 22:24:38,362] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population: 123.0 MB
[01.12.2016 22:24:38,364] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 120.5 MB
[01.12.2016 22:24:38,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 255.0
[01.12.2016 22:24:38,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: N_effort - Duration
[01.12.2016 22:24:38,561] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 1
[01.12.2016 22:24:38,622] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 347.0
[01.12.2016 22:24:38,622] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (AFP * PDR_UFP) + NPDR_AFP
[01.12.2016 22:24:38,623] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 22:24:38,919] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 498.0
[01.12.2016 22:24:38,920] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: PDR_AFP * AFP
[01.12.2016 22:24:38,920] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 1
[01.12.2016 22:24:39,659] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 499.0
[01.12.2016 22:24:39,660] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (PDR_AFP * AFP) + (Duration + Resource)
[01.12.2016 22:24:39,660] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 22:24:39,705] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 108.9 MB
[01.12.2016 22:24:39,925] [main] INFO  CostEstimationMain  - Using Pred(n) Fitness Function
[01.12.2016 22:24:39,925] [main] INFO  CostEstimationMain  - Evaulation of dataset: china.arff
[01.12.2016 22:24:39,925] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 499.0
[01.12.2016 22:24:39,925] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (PDR_AFP * AFP) + (Duration + Resource)
[01.12.2016 22:24:39,925] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 2
[01.12.2016 22:43:05,246] [main] INFO  FileObject  - Reading File kemerer.arff
[01.12.2016 22:43:05,258] [main] INFO  CostEstimationMAEFitness  - Inputs size: 6; variables: 6; dataLen: 15; outputs size: 15
[01.12.2016 22:43:05,278] [main] INFO  org.jgap.gp.impl.GPGenotype  - Creating initial population
[01.12.2016 22:43:05,281] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free: 123.0 MB
[01.12.2016 22:43:05,292] [main] INFO  org.jgap.gp.impl.GPPopulation  - Prototype program set
[01.12.2016 22:43:05,335] [main] INFO  org.jgap.gp.impl.GPGenotype  - Mem free after creating population: 123.0 MB
[01.12.2016 22:43:05,335] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 0, memory free: 120.7 MB
[01.12.2016 22:43:05,405] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 91.33
[01.12.2016 22:43:05,406] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((KSLOC * 2.0) / (RAWFP / AdjFP)) - (((2.0 / KSLOC) / (AdjFP * Duration)) + (KSLOC - 2.0))
[01.12.2016 22:43:05,407] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 4
[01.12.2016 22:43:05,452] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 91.33
[01.12.2016 22:43:05,453] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: ((KSLOC * 2.0) / (RAWFP / AdjFP)) - (((Language + KSLOC) / (AdjFP * Duration)) + (KSLOC - 2.0))
[01.12.2016 22:43:05,453] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 4
[01.12.2016 22:43:05,769] [main] INFO  org.jgap.gp.impl.GPGenotype  - Evolving generation 25, memory free: 174.3 MB
[01.12.2016 22:43:05,790] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 91.32
[01.12.2016 22:43:05,791] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((Duration + KSLOC) - 5.0) / (RAWFP / AdjFP)) - 5.0
[01.12.2016 22:43:05,792] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 4
[01.12.2016 22:43:05,831] [main] INFO  CostEstimationMain  - Using Mean Absolue Error Fitness Function
[01.12.2016 22:43:05,832] [main] INFO  CostEstimationMain  - Evaulation of dataset: kemerer.arff
[01.12.2016 22:43:05,832] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution fitness: 91.32
[01.12.2016 22:43:05,832] [main] INFO  org.jgap.gp.impl.GPGenotype  - Best solution: (((Duration + KSLOC) - 5.0) / (RAWFP / AdjFP)) - 5.0
[01.12.2016 22:43:05,833] [main] INFO  org.jgap.gp.impl.GPGenotype  - Depth of chrom: 4
